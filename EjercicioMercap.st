Error subclass: #ClienteNoCreadoError	instanceVariableNames: ''	classVariableNames: ''	package: 'EjercicioMercap-Excepciones'!Error subclass: #ClienteYaCreadoError	instanceVariableNames: ''	classVariableNames: ''	package: 'EjercicioMercap-Excepciones'!Error subclass: #LocalidadNoValidaError	instanceVariableNames: ''	classVariableNames: ''	package: 'EjercicioMercap-Excepciones'!Error subclass: #PaisNoValidoError	instanceVariableNames: ''	classVariableNames: ''	package: 'EjercicioMercap-Excepciones'!Object subclass: #Cliente	instanceVariableNames: 'nombre llamadas ubicacion abonoMensual'	classVariableNames: ''	package: 'EjercicioMercap-Clases'!!Cliente methodsFor: 'as yet unclassified' stamp: 'Nahuel 12/7/2021 15:01'!agregarLlamadaConFecha: unaFecha hora: unaHora yDuracion: unaDuracion haciaPais: unPais yLocalidad: unaLocalidad 	| llamadaNueva condicionLlamada |	condicionLlamada := ( ubicacion calificarLlamadaHaciaPais: unPais yLocalidad: unaLocalidad ) .	llamadaNueva := Llamada conFecha: unaFecha hora: unaHora yDuracion: unaDuracion deCondicion: condicionLlamada .	llamadas add: llamadaNueva .! !!Cliente methodsFor: 'as yet unclassified' stamp: 'Nahuel 12/8/2021 14:54'!facturarEnElMes: unaFecha 	| precioTotal |	precioTotal := abonoMensual .	llamadas do: [ :llamada | precioTotal := precioTotal + ( llamada facturarEnElMes: unaFecha ) ] .	^ precioTotal .	! !!Cliente methodsFor: 'initialization' stamp: 'Nahuel 12/8/2021 14:54'!initialize	llamadas := OrderedCollection new .	abonoMensual := 200.0 .! !!Cliente methodsFor: 'accessing' stamp: 'Nahuel 12/2/2021 14:36'!nombre: unNombre	nombre := unNombre! !!Cliente methodsFor: 'accessing' stamp: 'Nahuel 12/2/2021 14:37'!ubicacion: unaUbicacion	ubicacion := unaUbicacion .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Cliente class	instanceVariableNames: ''!!Cliente class methodsFor: 'as yet unclassified' stamp: 'Nahuel 12/7/2021 15:03'!conNombre: unNombre pais: unPais yLocalidad: unaLocalidad	| cliente |	cliente := self new .	cliente nombre: unNombre .	cliente ubicacion: ( Ubicacion conPais: unPais yLocalidad: unaLocalidad ) .	^ cliente .! !Object subclass: #CondicionLlamada	instanceVariableNames: ''	classVariableNames: ''	package: 'EjercicioMercap-Clases'!!CondicionLlamada methodsFor: 'as yet unclassified' stamp: 'Nahuel 12/7/2021 14:33'!facturarEnElDia: unaFecha enElHorario: unaHora yDuracion: unaDuracion	self subclassResponsibility .! !Object subclass: #Llamada	instanceVariableNames: 'fecha hora duracion condicionLlamada'	classVariableNames: ''	package: 'EjercicioMercap-Clases'!!Llamada methodsFor: 'as yet unclassified' stamp: 'Nahuel 12/7/2021 15:22'!facturarEnElMes: unaFecha	| fechaIngresada |	fechaIngresada := ( Date readFrom: unaFecha readStream pattern: 'dd/mm/yyyy' ) .	( ( ( fecha month ) = ( fechaIngresada month ) ) and: ( ( fecha year ) = ( fechaIngresada year ) ) ) 		ifTrue: [ ^ ( condicionLlamada facturarEnElDia: fecha enElHorario: hora yDuracion: duracion ) ]		ifFalse: [ ^ 0 ] .		! !!Llamada methodsFor: 'accessing' stamp: 'Nahuel 12/3/2021 18:33'!fecha: unaFecha 	fecha := unaFecha .! !!Llamada methodsFor: 'accessing' stamp: 'Nahuel 12/3/2021 18:33'!duracion: unaDuracion 	duracion := unaDuracion .! !!Llamada methodsFor: 'accessing' stamp: 'Nahuel 12/3/2021 18:33'!hora: unaHora	hora := unaHora .! !!Llamada methodsFor: 'accessing' stamp: 'Nahuel 12/3/2021 18:54'!condicionLlamada: unaCondicionLlamada 	condicionLlamada := unaCondicionLlamada .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Llamada class	instanceVariableNames: ''!!Llamada class methodsFor: 'as yet unclassified' stamp: 'Nahuel 12/7/2021 15:36'!conFecha: unaFecha hora: unaHora yDuracion: unaDuracion deCondicion: unaCondicionLlamada	| llamada |	llamada := self new .	llamada fecha: ( Date readFrom: unaFecha readStream pattern: 'dd/mm/yyyy' ) .	llamada hora: ( Time readFrom: unaHora readStream ) .	llamada duracion: unaDuracion .	llamada condicionLlamada: unaCondicionLlamada .	^ llamada .! !CondicionLlamada subclass: #LlamadaInternacional	instanceVariableNames: 'precioPaises precioPorMinuto'	classVariableNames: ''	package: 'EjercicioMercap-Clases'!!LlamadaInternacional methodsFor: 'initialization' stamp: 'Nahuel 12/8/2021 14:33'!initialize	precioPaises := Dictionary new .	precioPaises at: 'Brasil' put: 5.00 .	precioPaises at: 'Uruguay' put: 4.00 .	precioPaises at: 'Chile' put: 4.50 .! !!LlamadaInternacional methodsFor: 'as yet unclassified' stamp: 'Nahuel 12/7/2021 14:33'!facturarEnElDia: unaFecha enElHorario: unaHora yDuracion: unaDuracion	^ unaDuracion * precioPorMinuto .! !!LlamadaInternacional methodsFor: 'as yet unclassified' stamp: 'Nahuel 12/7/2021 14:32'!calcularPrecioAPais: unPais	precioPaises at: unPais ifPresent: [ precioPorMinuto := ( precioPaises at: unPais ) ]													ifAbsent: [ PaisNoValidoError signal ] .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!LlamadaInternacional class	instanceVariableNames: ''!!LlamadaInternacional class methodsFor: 'as yet unclassified' stamp: 'Nahuel 12/7/2021 14:30'!aPais: unPais	| llamadaInternacional |	llamadaInternacional := self new .	llamadaInternacional calcularPrecioAPais: unPais .	^ llamadaInternacional .! !CondicionLlamada subclass: #LlamadaLocal	instanceVariableNames: 'diaLimiteInferior diaLimiteSuperior horaLimiteInferior horaLimiteSuperior'	classVariableNames: ''	package: 'EjercicioMercap-Clases'!!LlamadaLocal methodsFor: 'initialization' stamp: 'Nahuel 12/6/2021 16:10'!initialize	diaLimiteInferior := 2 . " Lunes "	diaLimiteSuperior := 6 .	" Viernes "	horaLimiteInferior := Time hour: 08 minute: 00 second: 00 .	horaLimiteSuperior := Time hour: 20 minute: 00 second: 00 .! !!LlamadaLocal methodsFor: 'as yet unclassified' stamp: 'Nahuel 12/6/2021 16:16'!facturarEnElDia: unaFecha enElHorario: unaHora yDuracion: unaDuracion	( ( unaFecha dayOfWeek ) between: diaLimiteInferior and: diaLimiteSuperior )		ifTrue: [ ( ( horaLimiteInferior < unaHora ) and: ( unaHora < horaLimiteSuperior ) )			ifTrue: [ ^ unaDuracion * 0.20 ]			ifFalse: [ ^ unaDuracion * 0.10 ] ]		ifFalse: [ ^ unaDuracion * 0.10 ] .	! !CondicionLlamada subclass: #LlamadaNacional	instanceVariableNames: 'precioLocalidades precioPorMinuto'	classVariableNames: ''	package: 'EjercicioMercap-Clases'!!LlamadaNacional methodsFor: 'initialization' stamp: 'Nahuel 12/8/2021 14:33'!initialize	precioLocalidades := Dictionary new .	precioLocalidades at: 'Hurlingham' put: 0.80 .	precioLocalidades at: 'Cosquin' put: 1.50 .	precioLocalidades at: 'Rosario' put: 2.30 .! !!LlamadaNacional methodsFor: 'as yet unclassified' stamp: 'Nahuel 12/7/2021 14:24'!facturarEnElDia: unaFecha enElHorario: unaHora yDuracion: unaDuracion	^ unaDuracion * precioPorMinuto .! !!LlamadaNacional methodsFor: 'as yet unclassified' stamp: 'Nahuel 12/7/2021 14:27'!calcularPrecioALocalidad: unaLocalidad	precioLocalidades at: unaLocalidad ifPresent: [ precioPorMinuto := ( precioLocalidades at: unaLocalidad ) ]													ifAbsent: [ LocalidadNoValidaError signal ] .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!LlamadaNacional class	instanceVariableNames: ''!!LlamadaNacional class methodsFor: 'as yet unclassified' stamp: 'Nahuel 12/7/2021 14:24'!aLocalidad: unaLocalidad 	| llamadaNacional |	llamadaNacional := self new .	llamadaNacional calcularPrecioALocalidad: unaLocalidad .	^ llamadaNacional .! !Object subclass: #SistemaFacturacion	instanceVariableNames: 'clientes'	classVariableNames: ''	package: 'EjercicioMercap-Clases'!!SistemaFacturacion methodsFor: 'as yet unclassified' stamp: 'Nahuel 12/6/2021 14:55'!agregarLlamadaA: unId conFecha: unaFecha hora: unaHora yDuracion: unaDuracion haciaLocalidad: unaLocalidad yPais: unPais	clientes at: unId ifPresent: [ ( clientes at: unId ) agregarLlamadaConFecha: unaFecha hora: unaHora yDuracion: unaDuracion haciaPais: unPais yLocalidad: unaLocalidad ]							ifAbsent: [ ClienteNoCreadoError signal ] .! !!SistemaFacturacion methodsFor: 'as yet unclassified' stamp: 'Nahuel 12/6/2021 15:00'!facturarCliente: unId enElMes: unMes	clientes at: unId ifPresent: [ ^ ( clientes at: unId ) facturarEnElMes: unMes ]							ifAbsent: [ ClienteNoCreadoError signal ] .! !!SistemaFacturacion methodsFor: 'initialization' stamp: 'Nahuel 12/2/2021 14:17'!initialize	clientes := Dictionary new .! !!SistemaFacturacion methodsFor: 'initialization' stamp: 'Nahuel 12/7/2021 14:43'!agregarClienteConId: unId nombre: unNombre pais: unPais yLocalidad: unaLocalidad	| cliente |	cliente := Cliente conNombre: unNombre pais: unPais yLocalidad: unaLocalidad .	clientes at: unId ifPresent: [ ClienteYaCreadoError signal ]							ifAbsent: [ clientes at: unId put: cliente ] .! !Object subclass: #Ubicacion	instanceVariableNames: 'localidad pais'	classVariableNames: ''	package: 'EjercicioMercap-Clases'!!Ubicacion methodsFor: 'accessing' stamp: 'Nahuel 12/2/2021 14:43'!pais: unPais	pais := unPais .! !!Ubicacion methodsFor: 'accessing' stamp: 'Nahuel 12/2/2021 14:43'!localidad: unaLocalidad	localidad := unaLocalidad .! !!Ubicacion methodsFor: 'accessing' stamp: 'Nahuel 12/7/2021 14:15'!calificarLlamadaHaciaPais: unPais yLocalidad: unaLocalidad	| condicionLlamada |	condicionLlamada := pais = unPais		ifTrue: [ localidad = unaLocalidad				ifTrue: [ LlamadaLocal new ]				ifFalse: [ LlamadaNacional aLocalidad: unaLocalidad ] ]		ifFalse: [ LlamadaInternacional aPais: unPais ].	^ condicionLlamada .! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Ubicacion class	instanceVariableNames: ''!!Ubicacion class methodsFor: 'as yet unclassified' stamp: 'Nahuel 12/2/2021 14:42'!conPais: unPais yLocalidad: unaLocalidad	| ubicacion |	ubicacion := self new .	ubicacion pais: unPais .	ubicacion localidad: unaLocalidad .	^ ubicacion .! !TestCase subclass: #EjercicioMercapTest	instanceVariableNames: ''	classVariableNames: ''	package: 'EjercicioMercap-Tests'!!EjercicioMercapTest methodsFor: 'tests' stamp: 'Nahuel 12/8/2021 14:55'!test08AgregoLlamadasLocalesEnDistintosDias	| sistemaFacturacion |		sistemaFacturacion := SistemaFacturacion new .		sistemaFacturacion agregarClienteConId: 1 nombre: 'Agustin'  pais: 'Argentina' yLocalidad: 'San Justo' .	sistemaFacturacion agregarClienteConId: 2 nombre: 'Nicolas'  pais: 'Argentina' yLocalidad: 'San Justo' .			sistemaFacturacion agregarLlamadaA: 1 conFecha: '10/12/2021' hora: '15:30:00' yDuracion: 10 haciaLocalidad: 'San Justo' yPais: 'Argentina' .	sistemaFacturacion agregarLlamadaA: 2 conFecha: '11/12/2021' hora: '15:30:00' yDuracion: 10 haciaLocalidad: 'San Justo' yPais: 'Argentina' .		self assert: ( sistemaFacturacion facturarCliente: 1 enElMes: '01/12/2021' ) equals: 202.0 .		self assert: ( sistemaFacturacion facturarCliente: 2 enElMes: '01/12/2021' ) equals: 201.0 .! !!EjercicioMercapTest methodsFor: 'tests' stamp: 'Nahuel 12/8/2021 14:55'!test09AgregoLlamadasEnDistintasLocalidades	| sistemaFacturacion |		sistemaFacturacion := SistemaFacturacion new .		sistemaFacturacion agregarClienteConId: 1 nombre: 'Agustin'  pais: 'Argentina' yLocalidad: 'San Justo' .	sistemaFacturacion agregarClienteConId: 2 nombre: 'Nicolas'  pais: 'Argentina' yLocalidad: 'San Justo' .			sistemaFacturacion agregarLlamadaA: 1 conFecha: '10/12/2021' hora: '15:30:00' yDuracion: 10 haciaLocalidad: 'Cosquin' yPais: 'Argentina' .	sistemaFacturacion agregarLlamadaA: 2 conFecha: '11/12/2021' hora: '15:30:00' yDuracion: 10 haciaLocalidad: 'Rosario' yPais: 'Argentina' .		self assert: ( sistemaFacturacion facturarCliente: 1 enElMes: '01/12/2021' ) equals: 215.0 .		self assert: ( sistemaFacturacion facturarCliente: 2 enElMes: '01/12/2021' ) equals: 223.0 .! !!EjercicioMercapTest methodsFor: 'tests' stamp: 'Nahuel 12/8/2021 14:55'!test01AgregoUnCliente	| sistemaFacturacion |		sistemaFacturacion := SistemaFacturacion new .		sistemaFacturacion agregarClienteConId: 1 nombre: 'Agustin'  pais: 'Argentina' yLocalidad: 'San Justo' .		self assert: ( sistemaFacturacion facturarCliente: 1 enElMes: '01/04/2021' ) equals: 200.0 .! !!EjercicioMercapTest methodsFor: 'tests' stamp: 'Nahuel 12/8/2021 14:30'!test04AgregoUnaLlamadaAUnClienteNoValido	| sistemaFacturacion |		sistemaFacturacion := SistemaFacturacion new .		sistemaFacturacion agregarClienteConId: 1 nombre: 'Agustin'  pais: 'Argentina' yLocalidad: 'San Justo' .		self should: [ sistemaFacturacion agregarLlamadaA: 2 conFecha: '19/04/2021' hora: '15:30:00' yDuracion: 10 haciaLocalidad: 'San Justo' yPais: 'Argentina' ] raise: ClienteNoCreadoError .! !!EjercicioMercapTest methodsFor: 'tests' stamp: 'Nahuel 12/8/2021 15:15'!test12AgregoVariedadDeLlamadasEnDistintosMeses	| sistemaFacturacion |		sistemaFacturacion := SistemaFacturacion new .		sistemaFacturacion agregarClienteConId: 1 nombre: 'Agustin'  pais: 'Argentina' yLocalidad: 'San Justo' .			sistemaFacturacion agregarLlamadaA: 1 conFecha: '10/12/2021' hora: '15:30:00' yDuracion: 10 haciaLocalidad: 'San Justo' yPais: 'Argentina' . "2.0"	sistemaFacturacion agregarLlamadaA: 1 conFecha: '11/12/2021' hora: '15:30:00' yDuracion: 10 haciaLocalidad: 'San Justo' yPais: 'Argentina' . "1.0"		sistemaFacturacion agregarLlamadaA: 1 conFecha: '10/11/2021' hora: '15:30:00' yDuracion: 10 haciaLocalidad: 'Cosquin' yPais: 'Argentina' . "15.0"		sistemaFacturacion agregarLlamadaA: 1 conFecha: '11/11/2021' hora: '15:30:00' yDuracion: 10 haciaLocalidad: 'Viña del Mar' yPais: 'Chile' . "45.0"		self assert: ( sistemaFacturacion facturarCliente: 1 enElMes: '01/12/2021' ) equals: 203.0 .		self assert: ( sistemaFacturacion facturarCliente: 1 enElMes: '01/11/2021' ) equals: 260.0 .! !!EjercicioMercapTest methodsFor: 'tests' stamp: 'Nahuel 12/8/2021 14:24'!test02AgregoUnClienteRepetido	| sistemaFacturacion |		sistemaFacturacion := SistemaFacturacion new .		sistemaFacturacion agregarClienteConId: 1 nombre: 'Agustin'  pais: 'Argentina' yLocalidad: 'San Justo' .		self should: [ sistemaFacturacion agregarClienteConId: 1 nombre: 'Agustin' pais: 'Argentina' yLocalidad: 'San Justo' ] raise: ClienteYaCreadoError .! !!EjercicioMercapTest methodsFor: 'tests' stamp: 'Nahuel 12/8/2021 14:55'!test07AgregoLlamadasLocalesEnDistintosHorarios	| sistemaFacturacion |		sistemaFacturacion := SistemaFacturacion new .		sistemaFacturacion agregarClienteConId: 1 nombre: 'Agustin'  pais: 'Argentina' yLocalidad: 'San Justo' .	sistemaFacturacion agregarClienteConId: 2 nombre: 'Nicolas'  pais: 'Argentina' yLocalidad: 'San Justo' .			sistemaFacturacion agregarLlamadaA: 1 conFecha: '19/04/2021' hora: '15:30:00' yDuracion: 10 haciaLocalidad: 'San Justo' yPais: 'Argentina' .	sistemaFacturacion agregarLlamadaA: 2 conFecha: '19/04/2021' hora: '06:30:00' yDuracion: 10 haciaLocalidad: 'San Justo' yPais: 'Argentina' .		self assert: ( sistemaFacturacion facturarCliente: 1 enElMes: '01/04/2021' ) equals: 202.0 .		self assert: ( sistemaFacturacion facturarCliente: 2 enElMes: '01/04/2021' ) equals: 201.0 .! !!EjercicioMercapTest methodsFor: 'tests' stamp: 'Nahuel 12/8/2021 14:35'!test06AgregoUnaLlamadaConPaisDestinoNoValido	| sistemaFacturacion |		sistemaFacturacion := SistemaFacturacion new .		sistemaFacturacion agregarClienteConId: 1 nombre: 'Agustin'  pais: 'Argentina' yLocalidad: 'San Justo' .		self should: [ sistemaFacturacion agregarLlamadaA: 1 conFecha: '19/04/2021' hora: '15:30:00' yDuracion: 10 haciaLocalidad: 'San Justo' yPais: 'Buenos Aires' ] raise: PaisNoValidoError .! !!EjercicioMercapTest methodsFor: 'tests' stamp: 'Nahuel 12/8/2021 14:32'!test05AgregoUnaLlamadaConLocalidadDestinoNoValida	| sistemaFacturacion |		sistemaFacturacion := SistemaFacturacion new .		sistemaFacturacion agregarClienteConId: 1 nombre: 'Agustin'  pais: 'Argentina' yLocalidad: 'San Justo' .		self should: [ sistemaFacturacion agregarLlamadaA: 1 conFecha: '19/04/2021' hora: '15:30:00' yDuracion: 10 haciaLocalidad: 'Buenos Aires' yPais: 'Argentina' ] raise: LocalidadNoValidaError .! !!EjercicioMercapTest methodsFor: 'tests' stamp: 'Nahuel 12/8/2021 15:17'!test13FacturoClienteNoValido	| sistemaFacturacion |		sistemaFacturacion := SistemaFacturacion new .		sistemaFacturacion agregarClienteConId: 1 nombre: 'Agustin'  pais: 'Argentina' yLocalidad: 'San Justo' .			sistemaFacturacion agregarLlamadaA: 1 conFecha: '10/12/2021' hora: '15:30:00' yDuracion: 10 haciaLocalidad: 'San Justo' yPais: 'Argentina' . "2.0"		self should: [ sistemaFacturacion facturarCliente: 2 enElMes: '1/12/2021' ] raise: ClienteNoCreadoError .! !!EjercicioMercapTest methodsFor: 'tests' stamp: 'Nahuel 12/8/2021 15:13'!test11AgregoVariedadDeLlamadas	| sistemaFacturacion |		sistemaFacturacion := SistemaFacturacion new .		sistemaFacturacion agregarClienteConId: 1 nombre: 'Agustin'  pais: 'Argentina' yLocalidad: 'San Justo' .			sistemaFacturacion agregarLlamadaA: 1 conFecha: '10/12/2021' hora: '15:30:00' yDuracion: 10 haciaLocalidad: 'San Justo' yPais: 'Argentina' . "2.0"	sistemaFacturacion agregarLlamadaA: 1 conFecha: '11/12/2021' hora: '15:30:00' yDuracion: 10 haciaLocalidad: 'San Justo' yPais: 'Argentina' . "1.0"		sistemaFacturacion agregarLlamadaA: 1 conFecha: '10/12/2021' hora: '15:30:00' yDuracion: 10 haciaLocalidad: 'Cosquin' yPais: 'Argentina' . "15.0"		sistemaFacturacion agregarLlamadaA: 1 conFecha: '11/12/2021' hora: '15:30:00' yDuracion: 10 haciaLocalidad: 'Viña del Mar' yPais: 'Chile' . "45.0"		self assert: ( sistemaFacturacion facturarCliente: 1 enElMes: '01/12/2021' ) equals: 263.0 .! !!EjercicioMercapTest methodsFor: 'tests' stamp: 'Nahuel 12/8/2021 14:55'!test03AgregoUnaLlamada	| sistemaFacturacion |		sistemaFacturacion := SistemaFacturacion new .		sistemaFacturacion agregarClienteConId: 1 nombre: 'Agustin'  pais: 'Argentina' yLocalidad: 'San Justo' .		sistemaFacturacion agregarLlamadaA: 1 conFecha: '19/04/2021' hora: '15:30:00' yDuracion: 10 haciaLocalidad: 'San Justo' yPais: 'Argentina' . 		self assert: ( sistemaFacturacion facturarCliente: 1 enElMes: '01/04/2021' ) equals: 202.0 .! !!EjercicioMercapTest methodsFor: 'tests' stamp: 'Nahuel 12/8/2021 15:01'!test10AgregoLlamadasEnDistintosPaises	| sistemaFacturacion |		sistemaFacturacion := SistemaFacturacion new .		sistemaFacturacion agregarClienteConId: 1 nombre: 'Agustin'  pais: 'Argentina' yLocalidad: 'San Justo' .	sistemaFacturacion agregarClienteConId: 2 nombre: 'Nicolas'  pais: 'Argentina' yLocalidad: 'San Justo' .			sistemaFacturacion agregarLlamadaA: 1 conFecha: '10/12/2021' hora: '15:30:00' yDuracion: 10 haciaLocalidad: 'Goiania' yPais: 'Brasil' .	sistemaFacturacion agregarLlamadaA: 2 conFecha: '11/12/2021' hora: '15:30:00' yDuracion: 10 haciaLocalidad: 'Punta del Este' yPais: 'Uruguay' .		self assert: ( sistemaFacturacion facturarCliente: 1 enElMes: '01/12/2021' ) equals: 250.0 .		self assert: ( sistemaFacturacion facturarCliente: 2 enElMes: '01/12/2021' ) equals: 240.0 .! !